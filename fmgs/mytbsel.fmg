/*
 * $Id: mytbsel.fmg $
 */
/*
 * ooHG source code:
 * ooHG IDE+ form generator
 *
 * Copyright 2014-2020 Fernando Yurisich <fyurisich@oohg.org> and contributors of
 * the Object Oriented (x)Harbour GUI (aka OOHG) Project, https://oohg.github.io
 *
 * Based upon:
 * Harbour Minigui Ide
 * Copyright 2002-2014 Ciro Vargas Clemow <cvc@oohg.org>
 *
 * Portions of this project are based upon:
 *    "Harbour MiniGUI Extended Edition Library"
 *       Copyright 2005-2020 MiniGUI Team, http://hmgextended.com
 *    "Harbour GUI framework for Win32"
 *       Copyright 2001 Alexander S.Kresin <alex@kresin.ru>
 *       Copyright 2001 Antonio Linares <alinares@fivetech.com>
 *    "Harbour MiniGUI"
 *       Copyright 2002-2016 Roberto Lopez <mail.box.hmg@gmail.com>
 *    "Harbour Project"
 *       Copyright 1999-2020 Contributors, https://harbour.github.io/
 */
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file LICENSE.txt. If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1335, USA (or download from http://www.gnu.org/licenses/).
 *
 * As a special exception, the ooHG Project gives permission for
 * additional uses of the text contained in its release of ooHG.
 *
 * The exception is that, if you link the ooHG libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the ooHG library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the ooHG
 * Project under the name ooHG. If you copy code from other
 * ooHG Project or Free Software Foundation releases into a copy of
 * ooHG, as the General Public License permits, the exception does
 * not apply to the code that you add in this way. To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for ooHG, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 */

DEFINE WINDOW TEMPLATE ;
   AT 100, 100 ;
   WIDTH 370 ;
   HEIGHT 350 ;
   TITLE "OOHG IDE+ - " + i18n( "Toolbar selector" ) ;
   MODAL ;
   FONT 'Arial' ;
   SIZE 10 ;
   CLIENTAREA ;
   ON INIT ( aEval( ::aToolBars, { |oTb| oLst:AddItem( oTb:Name ) } ), oLst:Value := Min( 1, ::Count ), oEdit:Enabled := oDel:Enabled := ( ::Count > 0 ) )

   @ 15, 30 LABEL label_1 ;
      WIDTH 120 ;
      HEIGHT 24 ;
      VALUE i18n( 'Toolbars:' ) ;
      TRANSPARENT

   @ 50, 20 LISTBOX list_Tbs ;
      OBJ oLst ;
      WIDTH 200 ;
      HEIGHT 280

   @ 50, 250 BUTTON button_Add ;
      WIDTH 100 ;
      HEIGHT 28 ;
      CAPTION i18n( 'Add' ) ;
      ACTION { |oTb| oTb := ::AddToolBar(), IF( ::EditToolBar( ::Count ) == EDIT_SAVED, ( oLst:AddItem( oTb:Name ), oLst:Value := ::Count, oEdit:Enabled := oDel:Enabled := .T. ), ::DelToolBar( ::Count ) ) }

   @ 92, 250 BUTTON button_Del ;
      OBJ oDel ;
      WIDTH 100 ;
      HEIGHT 28 ;
      CAPTION i18n( 'Delete' ) ;
      ACTION { || IF( MsgYesNo( i18n( 'Select [Yes] to delete toolbar ' ) + oLst:Item( oLst:Value ) + '.', 'OOHG IDE+' ), Eval( { |i| i := oLst:Value, ::DelToolBar( i ), ::lChanged := .T., oLst:DeleteItem( i ), oLst:Value := Min( i, ::Count ), oEdit:Enabled := oDel:Enabled := ( oLst:Value > 0 ) } ), NIL ) }

   @ 134, 250 BUTTON button_Edit ;
      OBJ oEdit ;
      WIDTH 100 ;
      HEIGHT 28 ;
      CAPTION i18n( 'Edit' ) ;
      ACTION ::EditToolBar( oLst:Value )

   @ 176, 250 BUTTON button_Up ;
      WIDTH 100 ;
      HEIGHT 28 ;
      CAPTION '/\' ;
      ACTION { |i| i := ::MoveToolBarUp( oLst:Value ), oLst:DeleteAllItems(), aEval( ::aToolBars, { |oTb| oLst:AddItem( oTb:Name ) } ), oLst:Value := i }

   @ 218, 250 BUTTON button_Down ;
      WIDTH 100 ;
      HEIGHT 28 ;
      CAPTION '\/' ;
      ACTION { |i| i := ::MoveToolBarDown( oLst:Value ), oLst:DeleteAllItems(), aEval( ::aToolBars, { |oTb| oLst:AddItem( oTb:Name ) } ), oLst:Value := i }

   @ 260, 250 BUTTON button_Save ;
      WIDTH 100 ;
      HEIGHT 28 ;
      CAPTION i18n( 'Discard' ) ;
      ACTION IF( ::lChanged, IF( MsgYesNo( i18n( "Select [Yes] to discard changes and reload toolbars from FMG file." ), 'OOHG IDE+' ), ( ::LoadToolBars(), oLst:DeleteAllItems(), aEval( ::aToolBars, { |oTb| oLst:AddItem( oTb:Name ) } ), oLst:Value := Min( 1, ::Count ), oEdit:Enabled := oDel:Enabled := ( ::Count > 0 ) ), NIL ), MsgExclamation( i18n( "No changes were made." ), 'OOHG IDE+' ) )

   @ 302, 250 BUTTON button_Exit ;
      WIDTH 100 ;
      HEIGHT 28 ;
      CAPTION i18n( 'Exit' ) ;
      ACTION ThisWindow.Release()

END WINDOW

